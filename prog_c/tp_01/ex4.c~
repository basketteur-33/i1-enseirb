#include <stdlib.h>
#include <stdio.h>

void display_array(int t[], int n) {
  int i = 0;

  printf("[");

  while (i < n-1) {
    printf("%d, ", t[i]);
    i++;
  }

  /* Ne pas avoir de virgule a la fin */
  printf("%d]\n", t[i]);
}


int is_sort(int t[], int n) {
  int i = 1;

  while (i < n) {
    if (t[i-1] > t[i])
      return 0;
    i++;
  }

  return 1;
}


int is_inside(int t[], int n, int x) {
  int i = 1;

  while (i < n) {
    if (t[i] == x)
      return 1;
    i++;
  }

  return 0;
}


/* On suppose que le tableau t est trie */
int is_inside_dicho(int t[], int n, int x) {
  int debut = 0;
  int fin = n;
  int milieu = n/2;

  while (debut > fin) {
    if (x == t[debut])
      return 1;

    milieu = debut + (fin - debut) / 2;
    
    if (x < t[milieu])
      fin = milieu;
    else
      debut = milieu;
  }

  return 0;
}
    


int main(int argc, char *argv[]) {
  int n = 5; 

  int t1[5] = { 1, 4, 43, 65, 94 };
  int t2[5] = { 1, 42, 4, 94, 65};

  printf("t1 : ");
  display_array(t1, n);

  printf("t2 : ");
  display_array(t2, n);

  printf("is_sort(t1, n) : %d\n", is_sort(t1, n));
  printf("is_sort(t2, n) : %d\n", is_sort(t2, n));

  printf("is_inside(t1, n, 42) : %d\n", is_inside(t1, n, 42));
  printf("is_inside(t2, n, 42) : %d\n", is_inside(t2, n, 42));

  return EXIT_SUCCESS;
}
